1. event bubbling event capturing, stopPropagation, stopImmediatePropagation
 answer link: https://jsfiddle.net/eugensunic/z5hvoj1y/
2. promises, (race, all, async-await, then, allSettled, reject, resolve)
 answer: https://jsfiddle.net/eugensunic/wqxm21kv/21
3. this, call, bind, apply
4. closures
5. function hoisting, variable hoisting, const let hoisting (temporal dead zone)
6. prototype methods vs adding methods to class
7. deep copy vs shallow copy
8. lexical scope
9. callback functions
10. singleton in js 
11. memoization/caching
13. functions arguments param
14. function statement vs function expression
15. coercion
16. currying
17. typeof vs instanceof
18. dynamically/loosly vs statical typed language
19. promises vs api priority
20. let and const declaration are not hoisted (temporal dead zone)
21. difference between pointer and reference
22. function arguments pass by value pass by reference
23. stack vs heap in JavaScript (everything is stored on the heap)
24. coalescing
25. imperative, declarative, functional
26. Garbage collector in Js
27. How to deep copy an object of unknown/uncertain depth
28. eval, strict
29. write your own reduce, map, filter function (Array.prototype)
   answer: https://jsfiddle.net/eugensunic/wqxm21kv/ 



